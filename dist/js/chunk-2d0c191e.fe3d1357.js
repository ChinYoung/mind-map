(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0c191e"],{4738:function(e,a,s){"use strict";s.r(a);var _=function(){var e=this;e._self._c;return e._m(0)},v=[function(){var e=this,a=e._self._c;return a("div",[a("h1",[e._v("内置工具方法")]),a("p",[e._v("引用：")]),a("pre",{staticClass:"hljs"},[a("code",[a("span",{staticClass:"hljs-keyword"},[e._v("import")]),e._v(" {walk, ...} "),a("span",{staticClass:"hljs-keyword"},[e._v("from")]),e._v(" "),a("span",{staticClass:"hljs-string"},[e._v("'simple-mind-map/src/utils'")]),e._v("\n")])]),a("h2",[e._v("方法")]),a("h3",[e._v("walk(root, parent, beforeCallback, afterCallback, isRoot, layerIndex = 0, index = 0)")]),a("p",[e._v("深度优先遍历树")]),a("p",[a("code",[e._v("root")]),e._v("：要遍历的树的根节点")]),a("p",[a("code",[e._v("parent")]),e._v("：父节点")]),a("p",[a("code",[e._v("beforeCallback")]),e._v("：前序遍历回调函数，回调参数为：root, parent, isRoot, layerIndex, index")]),a("p",[a("code",[e._v("afterCallback")]),e._v("：后序遍历回调函数，回调参数为：root, parent, isRoot, layerIndex, index")]),a("p",[a("code",[e._v("isRoot")]),e._v("：是否是根节点")]),a("p",[a("code",[e._v("layerIndex")]),e._v("：节点层级")]),a("p",[a("code",[e._v("index")]),e._v("：节点在同级节点里的索引")]),a("p",[e._v("示例：")]),a("pre",{staticClass:"hljs"},[a("code",[e._v("walk(tree, "),a("span",{staticClass:"hljs-literal"},[e._v("null")]),e._v(", "),a("span",{staticClass:"hljs-function"},[e._v("() =>")]),e._v(" {}, "),a("span",{staticClass:"hljs-function"},[e._v("() =>")]),e._v(" {}, "),a("span",{staticClass:"hljs-literal"},[e._v("false")]),e._v(", "),a("span",{staticClass:"hljs-number"},[e._v("0")]),e._v(", "),a("span",{staticClass:"hljs-number"},[e._v("0")]),e._v(")\n")])]),a("h3",[e._v("bfsWalk(root, callback)")]),a("p",[e._v("广度优先遍历树")]),a("h3",[e._v("resizeImgSize(width, height, maxWidth, maxHeight)")]),a("p",[e._v("缩放图片的尺寸")]),a("p",[a("code",[e._v("width")]),e._v("：图片原本的宽")]),a("p",[a("code",[e._v("height")]),e._v("：图片原本的高")]),a("p",[a("code",[e._v("maxWidth")]),e._v("：要缩放到的宽")]),a("p",[a("code",[e._v("maxHeight")]),e._v("：要缩放到的高")]),a("p",[a("code",[e._v("maxWidth")]),e._v("和"),a("code",[e._v("maxHeight")]),e._v("可以同时都传，也可以只传一个")]),a("h3",[e._v("resizeImg(imgUrl, maxWidth, maxHeight)")]),a("p",[e._v("缩放图片，内部先加载图片，然后调用"),a("code",[e._v("resizeImgSize")]),e._v("方法，返回一个"),a("code",[e._v("promise")])]),a("h3",[e._v("simpleDeepClone(data)")]),a("p",[e._v("极简的深拷贝方法，只能针对全是基本数据的对象，否则会报错")]),a("h3",[e._v("copyRenderTree(tree, root)")]),a("p",[e._v("复制渲染树数据，示例：")]),a("pre",{staticClass:"hljs"},[a("code",[e._v("copyRenderTree({}, "),a("span",{staticClass:"hljs-built_in"},[e._v("this")]),e._v(".mindMap.renderer.renderTree)\n")])]),a("h3",[e._v("copyNodeTree(tree, root)")]),a("p",[e._v("复制节点树数据，主要是剔除其中的引用"),a("code",[e._v("node")]),e._v("实例的"),a("code",[e._v("_node")]),e._v("，然后复制"),a("code",[e._v("data")]),e._v("对象的数据，示例：")]),a("pre",{staticClass:"hljs"},[a("code",[e._v("copyNodeTree({}, node)\n")])]),a("h3",[e._v("imgToDataUrl(src)")]),a("p",[e._v("图片转成dataURL")]),a("h3",[e._v("downloadFile(file, fileName)")]),a("p",[e._v("下载文件")]),a("h3",[e._v("throttle(fn, time = 300, ctx)")]),a("p",[e._v("节流函数")]),a("h3",[e._v("asyncRun(taskList, callback = () => {})")]),a("p",[e._v("异步执行任务队列，多个任务是同步执行的，没有先后顺序")]),a("h3",[e._v("degToRad(deg)")]),a("blockquote",[a("p",[e._v("v0.2.24+")])]),a("p",[e._v("角度转弧度")]),a("h3",[e._v("camelCaseToHyphen(str)")]),a("blockquote",[a("p",[e._v("v0.2.24+")])]),a("p",[e._v("驼峰转连字符")])])}],t={},o=t,l=s("2877"),i=Object(l["a"])(o,_,v,!1,null,null,null);a["default"]=i.exports}}]);